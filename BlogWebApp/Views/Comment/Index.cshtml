@using BlogWebApp.Controllers
@using BlogWebApp.BLL.ViewModels
@using BlogWebApp.BLL.ViewModels.Comments
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model BlogArticleCommentsViewModel

@{
    ViewData["Title"] = "Комментарии";
}

@{
    var prevDisabled = !Model.PaginatedListComments.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PaginatedListComments.HasNextPage ? "disabled" : "";
}

<link rel="stylesheet" href="~/lib/bootstrap/bootstrap-4.0.0/dist/css/bootstrap.min.css"/>

<div class="modal" id="modal-photo" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-body">
          <img id="comment-photo" style="width: 768px;">
      </div>
    </div>
  </div>
</div>


<input type="hidden" value="@Model.blogArticle.Id" id="BlogArticleId" />

<a asp-action="Index"
   asp-route-blogArticleId="@Model.blogArticle.Id"
   asp-route-pageNumber="@(Model.PaginatedListComments.PageIndex - 1)"
   class="btn btn-primary @prevDisabled">
   <i class="glyphicon glyphicon-chevron-left"></i>
   Назад
</a>
<a asp-action="Index"
   asp-route-blogArticleId="@Model.blogArticle.Id"
   asp-route-pageNumber="@(Model.PaginatedListComments.PageIndex + 1)"
   class="btn btn-primary @nextDisabled">
   Вперед
   <i class="glyphicon glyphicon-chevron-right"></i>
</a>

<h4> </h4>

@foreach (var item in Model.PaginatedListComments)
{
    <div class="card" style="width: 36rem;">
      <div class="card-body">
        @if (item.Image != null && item.Image.Length > 0)
        {
            @Html.Raw("<img data-bs-toggle=\"modal\" data-bs-target=\"#modal-photo\" data-bs-img=" + Convert.ToBase64String(item.Image) + 
                " style='height:120px;' src=\"data:image/jpeg;base64," + Convert.ToBase64String(item.Image) + "\" />")
        }
        <p class="card-text">@item.Content</p>
        <a asp-controller="UserManagement" asp-action="ShowUser" asp-route-userId="@item.AuthorId"> @Html.DisplayFor(modelItem => item.Author) </a>
        @Html.DisplayFor(modelItem => item.DateChange)
        @if (ViewBag.UserEmail == item.Author || (await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded
                                              || (await AuthorizationService.AuthorizeAsync(User, "RequireModeratorRole")).Succeeded)
        {
            <a asp-action="Edit" asp-route-id="@item.Id" asp-route-blogArticleId="@Model.blogArticle.Id" title="Редактировать"> 
                <img style='height:24px;' src="@Url.Content("~/images/Edit.png")" /></a>
            <text>  </text>
            <a asp-action="Delete" asp-route-id="@item.Id" asp-route-blogArticleId="@Model.blogArticle.Id" title="Удалить">
                <img style='height:32px;' src="@Url.Content("~/images/Delete.png")" /></a>
        }
      </div>
    </div>    
}

@if (!Model.PaginatedListComments.HasNextPage)
{
    <div id="notify"></div>
}

<h4> </h4>

<a asp-action="Create"
   asp-route-blogArticleId="@Model.blogArticle.Id"
   class="btn btn-secondary">
   Добавить комментарий
</a>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/comment.js"></script>
<script src="~/lib/bootstrap/bootstrap-4.0.0/dist/js/vendor/jquery-slim.min.js"></script>
<script src="~/lib/bootstrap/bootstrap-4.0.0/js/dist/util.js"></script>
<script src="~/lib/bootstrap/bootstrap-4.0.0/js/dist/modal.js"></script>


<script>
    var commentPhoto = document.getElementById('comment-photo')
    var modalPhoto = document.getElementById('modal-photo')
    modalPhoto.addEventListener('show.bs.modal', function (event) {
          // Кнопка, запускающая модальное окно
          var button = event.relatedTarget
          
          // Извлечь информацию из атрибутов data-bs- *
          var img = button.getAttribute('data-bs-img')
          
          // При необходимости вы можете инициировать запрос AJAX здесь
          // а затем выполните обновление в обратном вызове.
          //
          // Обновите содержимое модального окна.
          commentPhoto.src = "data:image/jpeg;base64," + img
    })
</script>